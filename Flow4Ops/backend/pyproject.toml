[tool.black]
# Black code formatter configuration
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories to exclude
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | venv
  | alembic/versions  # Don't reformat auto-generated migrations
)/
'''

[tool.ruff]
# Ruff linter configuration
line-length = 100
target-version = "py311"

# Enable specific rule sets
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes (unused imports, undefined names)
    "I",  # isort (import sorting)
    "B",  # flake8-bugbear (common bugs)
    "C4", # flake8-comprehensions (better list/dict comprehensions)
    "UP", # pyupgrade (modernize Python syntax)
]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (Black handles this)
    "B008",  # Do not perform function call in argument defaults (FastAPI uses this pattern)
]

# Exclude directories
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "venv",
    "alembic/versions",
]

[tool.ruff.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",  # Verbose output
    "--strict-markers",  # Error on unknown markers
    "--tb=short",  # Shorter traceback format
    "--asyncio-mode=auto",  # Auto-detect async tests
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"